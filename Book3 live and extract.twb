<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Book1)' inline='true' name='federated.0ttkmkr1peg0we1bpwbyk1owlkz0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Book1' name='excel-direct.1ojsyr20i5x5zi1g0r6w01d9r7o6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sunny/Desktop/Book1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ojsyr20i5x5zi1g0r6w01d9r7o6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Countries' ordinal='0' />
            <column datatype='integer' name='Values' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ojsyr20i5x5zi1g0r6w01d9r7o6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Countries' ordinal='0' />
            <column datatype='integer' name='Values' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countries]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Countries</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3C166CACC7447A290DB81248A9E5A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Values]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Values</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3C166CACC7447A290DB81248A9E5A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D3C166CACC7447A290DB81248A9E5A86]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/sunny/Documents/My Tableau Repository/Datasources/Sheet1 (Book1).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='08/23/2022 11:56:05 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Book1)' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2022-08-23 11:56:05.244' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Countries</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Countries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Countries</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3C166CACC7447A290DB81248A9E5A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Values</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Values</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3C166CACC7447A290DB81248A9E5A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D3C166CACC7447A290DB81248A9E5A86'>
            <properties context=''>
              <relation connection='excel-direct.1ojsyr20i5x5zi1g0r6w01d9r7o6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='Countries' ordinal='0' />
                  <column datatype='integer' name='Values' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book1)' name='federated.0ttkmkr1peg0we1bpwbyk1owlkz0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ttkmkr1peg0we1bpwbyk1owlkz0'>
            <column datatype='string' name='[Countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Values]' role='measure' type='quantitative' />
            <column-instance column='[Countries]' derivation='None' name='[none:Countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[Longitude (generated)]' field-type='quantitative' max='43982210.374825977' min='4865707.781688204' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[Latitude (generated)]' field-type='quantitative' max='17559757.994917512' min='-4976018.9054001449' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[none:Countries:nk]' />
              <color column='[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[sum:Values:qk]' />
              <geometry column='[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[Latitude (generated)]</rows>
        <cols>[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9388F9FD-AAF9-4289-B2EF-9C8497DAA2AB}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[sum:Values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ttkmkr1peg0we1bpwbyk1owlkz0].[none:Countries:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6415731A-4D2E-4DE0-AA5C-8D1E1176118B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
